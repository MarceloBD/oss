generator photon {
  provider = "photonjs"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://auror:auror@localhost:5432/auror?schema=public"
}

model Author {
  id               Int              @id
  active           Boolean       @default(true)
  materialAuthor   MaterialAuthor[]
  subscriptionDate DateTime?        @map("subscription_date")
  type             String?
  user             User?            @map("user_id")

  materials        Material[]      @relation(name: "material_author", references: [id])

  @@map("author")
}

model KnexMigration {
  id            Int       @id
  batch         Int?
  migrationTime DateTime? @map("migration_time")
  name          String?

  @@map("knex_migrations")
}

model License {
  id          Int        @id
  active      Boolean     @default(true)
  licenseType String?    @map("license_type")
  material    Material[]
  name        String
  version     String?

  @@map("license")
}

model Material {
  id                     Int                      @id
  active                 Boolean                  @default(true)
  description            String?
  domainName             String?                  @map("domain_name")
  hash                   String?
  language               String?
  license                License?                 @map("license_id")
  materialAuthor         MaterialAuthor[]
  materialTargetAudience MaterialTargetAudience[]
  name                   String
  openSourceId           String?                  @map("open_source_id")
  post                   Post[]
  relationFrom               Relation[]               @relation("MaterialRelationToRelationMaterialFrom")
  relationTo               Relation[]               @relation("MaterialRelationToRelationMaterialTo")
  sourceType             String?                  @map("source_type")
  type                   String
  url                    String?
  version                Version?                 @map("version_id")
  authors                Author[]                 @relation(name:"material_author", references: [id])

  @@map("material")
}


model Login {
  id        Int      @id
  active    Boolean @default(true)
  user      User?    @map("user_id")

  @@map("login")
}


model MaterialAuthor {
  id        Int       @id
  active    Boolean   @default(true)
  author    Author?   @map("author_id")
  material  Material? @map("material_id")

  @@map("material_author")
}

model MaterialTargetAudience {
  id             Int             @id
  active         Boolean
  createdAt      DateTime        @map("created_at")
  material       Material?       @map("material_id")
  targetAudience TargetAudience? @map("target_audience_id")
  updatedAt      DateTime        @map("updated_at")

  @@map("material_target_audience")
}

model OperatingSystem {
  id                      Int                       @id
  active                  Boolean
  createdAt               DateTime                  @map("created_at")
  name                    String
  softwareOperatingSystem SoftwareOperatingSystem[]
  updatedAt               DateTime                  @map("updated_at")

  @@map("operating_system")
}

model Post {
  id             Int           @id
  active         Boolean       @default(true)
  checked        Boolean       @default(false)
  material       Material?     @map("material_id")
  numberOfAccess Int?          @map("number_of_access")
  postComment    PostComment[]
  postVote       PostVote[]
  user           User?         @map("user_id")

  @@map("post")
}

model PostComment {
  id        Int      @id
  active    Boolean
  comment   String?
  createdAt DateTime @map("created_at")
  post      Post?    @map("post_id")
  updatedAt DateTime @map("updated_at")
  user      User?    @map("user_id")

  @@map("post_comment")
}

model PostVote {
  id        Int      @id
  active    Boolean  @default(true)
  post      Post?    @map("post_id")
  user      User?    @map("user_id")

  @@map("post_vote")
}

model ProgrammingLanguage {
  id                          Int                           @id
  active                      Boolean
  createdAt                   DateTime                      @map("created_at")
  name                        String
  softwareProgrammingLanguage SoftwareProgrammingLanguage[]
  updatedAt                   DateTime                      @map("updated_at")

  @@map("programming_language")
}

model Relation {
  id           Int       @id
  active       Boolean
  createdAt    DateTime  @map("created_at")
  materialFrom Material? @map("material_from_id") @relation("MaterialRelationToRelationMaterialFrom")
  materialTo   Material? @map("material_to_id") @relation("MaterialRelationToRelationMaterialTo")
  type         String
  updatedAt    DateTime  @map("updated_at")

  @@map("relation")
}

model Software {
  id                          Int                           @id
  active                      Boolean
  createdAt                   DateTime                      @map("created_at")
  platform                    String?
  softwareOperatingSystem     SoftwareOperatingSystem[]
  softwareProgrammingLanguage SoftwareProgrammingLanguage[]
  totalSizeKb                 String?                       @map("total_size_kb")
  updatedAt                   DateTime                      @map("updated_at")

  @@map("software")
}

model SoftwareOperatingSystem {
  id              Int              @id
  active          Boolean
  createdAt       DateTime         @map("created_at")
  operatingSystem OperatingSystem? @map("operating_system_id")
  software        Software?        @map("software_id")
  updatedAt       DateTime         @map("updated_at")

  @@map("software_operating_system")
}

model SoftwareProgrammingLanguage {
  id                  Int                  @id
  active              Boolean
  createdAt           DateTime             @map("created_at")
  programmingLanguage ProgrammingLanguage? @map("programming_language_id")
  software            Software?            @map("software_id")
  updatedAt           DateTime             @map("updated_at")

  @@map("software_programming_language")
}

model Staff {
  id        Int      @id
  active    Boolean @default(true)
  user      User?    @map("user_id")

  @@map("staff")
}

model TargetAudience {
  id                     Int                      @id
  active                 Boolean
  createdAt              DateTime                 @map("created_at")
  materialTargetAudience MaterialTargetAudience[]
  name                   String
  updatedAt              DateTime                 @map("updated_at")

  @@map("target_audience")
}

model User {
  id          Int           @id
  active      Boolean @default(true)
  affiliction String?
  author      Author[]
  cellphone   String?
  document    String?       @unique
  email       String?       @unique
  login       Login[]
  name        String
  password    String
  post        Post[]
  postComment PostComment[]
  postVote    PostVote[]
  staff       Staff[]

  @@map("user")
}

model Version {
  id          Int        @id
  active      Boolean
  createdAt   DateTime   @map("created_at")
  material    Material[]
  name        String
  releaseDate DateTime?  @map("release_date")
  updatedAt   DateTime   @map("updated_at")

  @@map("version")
}
